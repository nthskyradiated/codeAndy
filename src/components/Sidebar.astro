---
import { fade } from 'astro:transitions';
import { getCollection } from 'astro:content';
  const allPosts = await getCollection("posts");
  const tags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

interface Props {
    sideTitle: string
}

const {sideTitle} = Astro.props
---

<aside data-theme="" transition:animate={fade({ duration: '0.7s' })}>
    <div class="container">
        <h2>{sideTitle}</h2>
        <ul>
            {tags.map((tag) => <li><a href={`/tag/${tag}`}>{tag}</a></li>)}
            
        </ul>
        </aside>
    </div>
<style lang='scss'>
@use '../styles/variables' as *;
@use '../styles/mixins' as *;
    aside {
        
        width: 25%;
        // background-color: $theme-red-1;
        color: $secondary-light;
    }
    .container {
        display: flex;
        flex-direction: column;
        margin: 8%;
        padding-bottom: 100px;
        width: auto;
        text-align: center;
        align-items: center;
        /* transform: translateY(10%); */
    }
    h2 {

        text-align: left;
        line-height: 2.5rem;
        padding-bottom: 32px;
    }
    li {
        list-style: none;
        text-align: left;
        line-height: 2em;
        a, a:visited{
            text-decoration: none;
            font-size: large;
            color: $secondary-light;
            &:hover {
        color: $theme-blue-3;
        opacity: .9;
        transition: .1s ease-in-out;
        }
        }

    
    }
    aside[data-theme='light'] {
        // background-color: $theme-blue-1;
        color: $theme-blue-2;
        a, a:visited{
            text-decoration: none;
            font-size: large;
            color: $theme-blue-2;
        }
        @include hover-light($secondary-light, $theme-blue-2)
    }
    aside[data-theme='dark'] {
        a, a:visited{
            font-size: large;
        }
        @include hover-light($secondary-light, $theme-blue-3,)
    }

    @media (max-width: 768px) {
        aside {
            display: none;
        }
	}
</style>